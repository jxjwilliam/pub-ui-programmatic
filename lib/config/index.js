/**
 * Module dependencies.
 */
var express = require("express");
var fs = require("fs");
var path = require("path");
var join = path.join;
var env = process.env;

/**
 * Expose configuration helper
 *
 * @param {Express} app `Express` instance.
 * @api public
 */

module.exports = function (app) {
    "use strict";
    /**
     * Load configuration settings
     * for common setup
     */

    app.configure(function () {

        /**
         * Load custom `config` settings from
         * file `config.json` or `config.local.json`
         */

        var cwd = process.cwd();

        if (fs.existsSync(cwd + "/lib/config/config.local.json")) {
            app.set("config", require(cwd + "/lib/config/config.local.json"));
            console.log("Local ---config.local.json--- is used.");
        }
        else {
            app.set("config", require(cwd + "/lib/config/config.json"));
            console.log("Global ---config.json--- is used.");
        }

        /**
         * Set default node environment to development
         */
        app.set("env", env.NODE_ENV || app.get("config").env);

        /**
         * Set application port
         */
        app.set("port", env.PORT || app.get("config").port);

        /**
         * Set `middlewareURL` for middleware connection
         */
        app.set("middlewareURL", app.get("config").middlewareURL);

        /**
         * Serve static HTML files out of root directory unless developments
         */
        app.use(express.static(join(__dirname, "..", "..", "/")));
        if (app.get("env") === "development") {
            app.use(express.static(join(__dirname, "..", "..", ".tmp")));
            app.use(express.static(join(__dirname, "..", "..", "app")));
        }

        /**
         * Publically access the ngdocs (via docs folder) generated by the build
         */
        app.use("/docs", express.static(join(__dirname, "..", "..", "docs")));

    });
};
